{"version":3,"sources":["App.js","components/firebaseData.js","components/Food.js","components/Food-dinner.js","components/Counter.js","components/Total.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","Component","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Food","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addOrder","event","target","currentTarget","nameOfEvent","getAttribute","priceOfEvent","console","log","object","setState","order","concat","toConsumableArray","state","totalfood","document","getElementsByClassName","innerHTML","map","item","i","breakfast","app","initializeApp","db","database","ref","child","_this2","e","key","title","Precio","name","value","onClick","FoodAndDinner","addOrderDinner","evento","nameOfTarget","priceOfTarget","OrderDinner","OtherFood","otherFood","Counter","react_router_dom","id","type","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","components_Food","Food_dinner","Total","prompt","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","components_Counter","components_Total","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"s8BAceA,mLATX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAChBH,EAAAC,EAAAC,cAAA,+CALQE,qCCFLC,EAAQ,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,cACnBC,MAAO,sDCuEQC,cAtEf,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAChBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAoBRQ,SAAW,SAACC,GACV,IAAMC,EAASD,EAAME,cACfC,EAAcF,EAAOG,aAAa,QAClCC,EAAeJ,EAAOG,aAAa,SAEzCE,QAAQC,IAAIJ,EAAaE,GAEzB,IAAMG,EAAQ,CACZL,cACAE,gBAGDb,EAAKiB,SAAS,CACZC,MAAK,GAAAC,OAAAlB,OAAAmB,EAAA,EAAAnB,CAAKD,EAAKqB,MAAMH,OAAhB,CAAuBF,KAC3B,WAAO,IAAMM,EAAYC,SAASC,uBAAuB,aAAa,GACzEF,EAAUG,UAAU,GACpBzB,EAAKqB,MAAMH,MAAMQ,IAAI,SAACC,EAAMC,GAC3BN,EAAUG,WAAa,+BAAiCE,EAAKhB,YAAcgB,EAAKd,aAAe,UAE9FC,QAAQC,IAAIf,EAAKqB,MAAMH,UAtC1BlB,EAAKqB,MAAQ,CACXQ,cACAX,MAAM,IAERlB,EAAK8B,IAAMC,wBAAczC,GACzBU,EAAKgC,GAAKhC,EAAK8B,IAAIG,WAAWC,MAAMC,MAAM,aAP1BnC,wEA8CV,IAAAoC,EAAAjC,KACA0B,EAAY1B,KAAKkB,MAAMQ,UAAUH,IAAI,SAACG,EAAWQ,GACrD,OAEJpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAYkD,IAAKD,GAChCpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcyC,EAAUU,OACtCtD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAayC,EAAUW,QACpCvD,EAAAC,EAAAC,cAAA,UAAQmD,IAAOD,EAAGI,KAAMZ,EAAUU,MAAOG,MAAOb,EAAUW,OAAQG,QAASP,EAAK7B,SAAUnB,UAAU,mBAApG,cAOF,OACEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZyC,UAlEYxC,qBCsDJuD,cAtDf,SAAAA,IAAa,IAAA5C,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,IACX5C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2C,GAAAtC,KAAAH,QAMF0C,eAAiB,SAACrC,GAChB,IAAMsC,EAAStC,EAAME,cACfqC,EAAeD,EAAOlC,aAAa,QACnCoC,EAAgBF,EAAOlC,aAAa,SAC1CE,QAAQC,IAAIgC,EAAcC,GAE1B,IAAMhC,EAAQ,CACZ+B,eACAC,iBAEFhD,EAAKiB,SAAS,CACZgC,YAAW,GAAA9B,OAAAlB,OAAAmB,EAAA,EAAAnB,CAAKD,EAAKqB,MAAM4B,aAAhB,CAA6BjC,KACvC,WAAO,IAAMM,EAAYC,SAASC,uBAAuB,aAAa,GACzEF,EAAUG,UAAU,GACpBzB,EAAKqB,MAAM4B,YAAYvB,IAAI,SAACC,EAAMU,GACjCf,EAAUG,WAAa,+BAAiCE,EAAKoB,aAAepB,EAAKqB,cAAgB,UAEhGlC,QAAQC,IAAIf,EAAKqB,MAAMH,UAtBzBlB,EAAKqB,MAAQ,CACX6B,cACAD,YAAY,IAJHjD,wEA4BD,IAAAoC,EAAAjC,KACA+C,EAAY/C,KAAKkB,MAAM6B,UAAUxB,IAAI,SAACyB,EAAWvB,GACrD,OAEN3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAYkD,IAAKV,GAC9B3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAc+D,EAAUZ,OACtCtD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAa+D,EAAUX,QACpCvD,EAAAC,EAAAC,cAAA,UAAQmD,IAAOV,EAAGa,KAAMU,EAAUZ,MAAOG,MAAOS,EAAUX,OAAQG,QAASP,EAAKS,eAAgBzD,UAAU,mBAA1G,cASA,OACEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZ8D,UAlDe7D,aCyCZ+D,mLAtCP,OACEnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,KACCpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYkE,GAAG,oBACxCrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAckE,GAAG,cAC9BrE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACZH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAemE,KAAK,SAASC,cAAY,WAAWC,cAAY,eAAeC,gBAAc,OAAOC,gBAAc,eAApI,cAMJ1E,EAAAC,EAAAC,cAAA,OAAKmE,GAAG,cAAclE,UAAU,gBAAgBwE,kBAAgB,aAAaC,cAAY,qBACvF5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACTH,EAAAC,EAAAC,cAAC2E,EAAD,SAIV7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAckE,GAAG,cAC9BrE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACZH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAyBmE,KAAK,SAASC,cAAY,WAAWC,cAAY,eAAeC,gBAAc,QAAQC,gBAAc,eAA/I,mBAKJ1E,EAAAC,EAAAC,cAAA,OAAKmE,GAAG,cAAclE,UAAU,WAAWwE,kBAAgB,aAAaC,cAAY,qBAClF5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAC4E,EAAD,kBA9Ba1E,aCgBR2E,mLAdP,OACE/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACvBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAGdH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBuD,QAASsB,QAA7C,0BAXgB5E,aCOA6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAOvF,EAAAC,EAAAC,cAACsF,EAAD,MAASlD,SAASmD,eAAe,SACjDH,IAASC,OAAOvF,EAAAC,EAAAC,cAACwF,EAAD,MAAapD,SAASmD,eAAe,WACrDH,IAASC,OAAOvF,EAAAC,EAAAC,cAACyF,EAAD,MAAUrD,SAASmD,eAAe,eDsH5C,kBAAmBG,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.fd98a725.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass App extends Component{\r\n  render(){\r\n    return(\r\n      <div className=\"header\">\r\n        <header className=\"headerApp\">\r\n          <h1>Welcome to Burguer Queen</h1>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n","\r\nexport const config ={\r\napiKey: \"AIzaSyCYgj0FCr-y0zumeLCF2iWUTatwkiw8RMo\",\r\nauthDomain: \"burger-queen-f47eb.firebaseapp.com\",\r\ndatabaseURL: \"https://burger-queen-f47eb.firebaseio.com\",\r\nprojectId: \"burger-queen-f47eb\",\r\nstorageBucket: \"burger-queen-f47eb.appspot.com\",\r\nmessagingSenderId: \"46990939306\",\r\nappId: \"1:46990939306:web:4683c698cfc893de\"\r\n}\r\n","import React, { Component } from 'react';\r\nimport firebase, { initializeApp } from 'firebase'\r\nimport {config} from './firebaseData'\r\nimport 'firebase/database'\r\nimport { breakfast } from './Breakfast.json';\r\n\r\n\r\nclass Food extends Component{\r\n\r\nconstructor(props){\r\n  super(props);\r\n  this.state = {\r\n    breakfast,\r\n    order:[]\r\n  }\r\n  this.app = initializeApp(config);\r\n  this.db = this.app.database().ref().child('OrderFood')\r\n} \r\n\r\n// componentDidMount (){\r\n//   const {Order} = this.state;\r\n// this.db.on(\"child_added\", snap =>{\r\n// Order.push({\r\n//   nameOfEvent,\r\n//   priceOfEvent\r\n// })\r\n// this.setState({Order})\r\n// })  \r\n// }\r\n\r\naddOrder = (event) =>{\r\n  const target = event.currentTarget;\r\n  const nameOfEvent = target.getAttribute(\"name\")\r\n  const priceOfEvent = target.getAttribute(\"value\")\r\n  \r\n  console.log(nameOfEvent, priceOfEvent);\r\n\r\n  const object= {\r\n    nameOfEvent,\r\n    priceOfEvent\r\n  }\r\n  \r\n   this.setState({\r\n     order:[...this.state.order, object]\r\n   }, ()=> { const totalfood = document.getElementsByClassName(\"totalfood\")[0]\r\n   totalfood.innerHTML=\"\"\r\n   this.state.order.map((item, i)=>{\r\n    totalfood.innerHTML += \"<li class='list-group-item'>\" + item.nameOfEvent + item.priceOfEvent + \"</li>\"\r\n   })\r\n     console.log(this.state.order)\r\n   })\r\n  \r\n  \r\n}\r\n\r\nrender(){\r\n  const breakfast = this.state.breakfast.map((breakfast, e) => {\r\n    return (\r\n      \r\n<div className=\"col-sm-6\"  key={e}>\r\n<div className=\"card\">\r\n  <div className=\"card-body\">\r\n    <h5 className=\"card-title\">{breakfast.title}</h5>\r\n    <p className=\"card-text\">{breakfast.Precio}</p>\r\n    <button key = {e} name={breakfast.title} value={breakfast.Precio} onClick={this.addOrder} className=\"btn btn-primary\">Pedir</button>\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n    )\r\n  })\r\n  return(\r\n    <div className=\"row\">\r\n      {breakfast}\r\n      </div>\r\n  );\r\n}\r\n\r\n}\r\nexport default Food;","import React, { Component } from 'react';\r\n\r\nimport { OtherFood } from './food-and-dinner.json';\r\n\r\n\r\nclass FoodAndDinner extends Component{\r\n\r\nconstructor(){\r\n  super();\r\n  this.state = {\r\n    OtherFood,\r\n    OrderDinner:[]\r\n  }\r\n}  \r\naddOrderDinner = (event) =>{\r\n  const evento = event.currentTarget;\r\n  const nameOfTarget = evento.getAttribute(\"name\")\r\n  const priceOfTarget = evento.getAttribute(\"value\")\r\n  console.log(nameOfTarget, priceOfTarget);\r\n\r\n  const object= {\r\n    nameOfTarget,\r\n    priceOfTarget\r\n  }\r\n  this.setState({\r\n    OrderDinner:[...this.state.OrderDinner, object]\r\n  }, ()=> { const totalfood = document.getElementsByClassName(\"totalfood\")[0]\r\n  totalfood.innerHTML=\"\"\r\n  this.state.OrderDinner.map((item, e)=>{\r\n   totalfood.innerHTML += \"<li class='list-group-item'>\" + item.nameOfTarget + item.priceOfTarget + \"</li>\"\r\n  })\r\n    console.log(this.state.order)\r\n  })\r\n}\r\n\r\n    render(){\r\n      const OtherFood = this.state.OtherFood.map((otherFood, i) => {\r\n        return (\r\n          \r\n  <div className=\"col-sm-6\"  key={i}>\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{otherFood.title}</h5>\r\n        <p className=\"card-text\">{otherFood.Precio}</p>\r\n        <button key = {i} name={otherFood.title} value={otherFood.Precio} onClick={this.addOrderDinner} className=\"btn btn-primary\">Pedir</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n        )\r\n      })\r\n      \r\n      \r\n        return(\r\n          <div className=\"row\">\r\n            {OtherFood}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default FoodAndDinner;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport Food from './Food';\r\nimport FoodAndDinner from './Food-dinner';\r\n\r\n\r\n class Counter extends Component{\r\n     render(){\r\n         return(\r\n           <BrowserRouter>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"card1\">\r\n    <div className=\"card-header\" id=\"headingOne\">\r\n      <h2 className=\"mb-0\">\r\n        <button className=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n          DESAYUNO\r\n        </button>\r\n      </h2>\r\n    </div>\r\n\r\n    <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordionExample\">\r\n      <div className=\"card-body\">\r\n            <Food/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"card1\">\r\n    <div className=\"card-header\" id=\"headingTwo\">\r\n      <h2 className=\"mb-0\">\r\n        <button className=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n         COMIDA Y CENA\r\n        </button>\r\n      </h2>\r\n    </div>\r\n    <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionExample\">\r\n      <div className=\"card-body\">\r\n          <FoodAndDinner/>\r\n          \r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</BrowserRouter>\r\n         );\r\n     }\r\n }\r\n export default Counter","import React, { Component } from 'react';\r\n\r\n\r\n\r\n\r\nclass Total extends Component{\r\n \r\n    render(){\r\n        return(\r\n          <div className=\"cardTotal\">\r\n  <h5 className=\"card-header\">Tu Pedido</h5>\r\n  <div className=\"card-body\">\r\n  {/* <input type=\"number\" min=\"1\" className=\"Input-number\"></input> */}\r\n  {/* <h5 className=\"card-title\">Numero de Cliente</h5> */}\r\n   <br></br>\r\n    <p className=\"card-text totalfood\" ></p>\r\n    <button className=\"btn btn-primary\" onClick={prompt} >Enviar Pedido</button>\r\n  </div>\r\n</div>\r\n        )\r\n    }\r\n}\r\nexport default Total","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Counter from './components/Counter';\r\nimport Total from './components/Total'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nReactDOM.render(<Counter />, document.getElementById('prueba'));\r\nReactDOM.render(<Total/>, document.getElementById('pruebafood'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
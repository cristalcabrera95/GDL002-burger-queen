{"version":3,"sources":["App.js","components/Food.js","components/Food-dinner.js","components/Counter.js","components/Total.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","className","Component","Food","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Breakfast","map","breakfast","i","title","Precio","FoodAndDinner","OtherFood","otherFood","Counter","id","type","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","components_Food","Food_dinner","total","class","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","components_Counter","Total","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f0e09e9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass App extends Component{\n  render(){\n    return(\n      <div className=\"header\">\n        <header className=\"headerApp\">\n          <h1>Welcome to Burguer Queen</h1>\n        </header>\n      </div>\n    );\n  }\n}\nexport default App;\n\n","import React, { Component } from 'react';\n\nimport { Breakfast } from './Breakfast.json';\n\n\nclass Food extends Component{\n\nconstructor(){\n  super();\n  this.state = {\n    Breakfast\n  }\n}  \n\n    render(){\n      const Breakfast = this.state.Breakfast.map((breakfast, i) => {\n        return (\n          \n  <div className=\"col-sm-6\">\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{breakfast.title}</h5>\n        <p className=\"card-text\">{breakfast.Precio}</p>\n        <button className=\"btn btn-primary\">Pedir</button>\n      </div>\n    </div>\n  </div>\n\n        )\n      })\n      \n        return(\n          <div className=\"row\">\n            {Breakfast}\n            </div>\n        );\n    }\n\n}\nexport default Food;","import React, { Component } from 'react';\n\nimport { OtherFood } from './food-and-dinner.json';\n\n\nclass FoodAndDinner extends Component{\n\nconstructor(){\n  super();\n  this.state = {\n    OtherFood\n  }\n}  \n\n    render(){\n      const OtherFood = this.state.OtherFood.map((otherFood, i) => {\n        return (\n          \n  <div className=\"col-sm-6\">\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{otherFood.title}</h5>\n        <p className=\"card-text\">{otherFood.Precio}</p>\n        <button className=\"btn btn-primary\">Pedir</button>\n      </div>\n    </div>\n  </div>\n\n        )\n      })\n      \n        return(\n          <div className=\"row\">\n            {OtherFood}\n            </div>\n        );\n    }\n\n}\nexport default FoodAndDinner;","import React, { Component } from 'react';\n\nimport Food from './Food';\nimport FoodAndDinner from './Food-dinner';\n\n class Counter extends Component{\n     render(){\n         return(\n            <div className=\"accordion\" id=\"accordionExample\">\n  <div className=\"card1\">\n    <div className=\"card-header\" id=\"headingOne\">\n      <h2 className=\"mb-0\">\n        <button className=\"btn btn-link\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n          DESAYUNO\n        </button>\n      </h2>\n    </div>\n\n    <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordionExample\">\n      <div className=\"card-body\">\n            <Food/>\n      </div>\n    </div>\n  </div>\n  <div className=\"card1\">\n    <div className=\"card-header\" id=\"headingTwo\">\n      <h2 className=\"mb-0\">\n        <button className=\"btn btn-link collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n         COMIDA Y CENA\n        </button>\n      </h2>\n    </div>\n    <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionExample\">\n      <div className=\"card-body\">\n          <FoodAndDinner/>\n      </div>\n    </div>\n  </div>\n</div>\n         );\n     }\n }\n export default Counter","import React, { Component } from 'react';\n\nclass total extends Component{\n    render(){\n        return(\n            <div class=\"row\">\n  <div className=\"col-sm-6\">\n    <div className=\"card\">\n      <div className=\"card-body\">\n        <h5 class=\"card-title\">Special title treatment</h5>\n        <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\n        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n      </div>\n    </div>\n  </div>\n  </div>\n        )\n    }\n}\nexport default total\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Counter from './components/Counter';\nimport Total from './components/Total'\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Counter />, document.getElementById('prueba'));\nReactDOM.render(<Total/>, document.getElementById('pruebafood'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}